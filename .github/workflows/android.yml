name: Android CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    # runs-on: ubuntu-latest
    runs-on: dell
    
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4

      - name: Get current date and commit hash
        id: date_and_hash
        run: |
          echo "date=$(date +'%Y-%m-%d-%H-%M')" >> "$GITHUB_OUTPUT"
          echo "hash=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Create .env for CI
        run: |
          echo "API_BASE_URL=\"https://api-presensigo.rizalanggoro.space\"" >> .env
          echo "RELEASE_TAG=\"build-${{ steps.date_and_hash.outputs.date }}-${{ steps.date_and_hash.outputs.hash }}\"" >> .env

      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Install Android SDK Command-line Tools
        run: |
          mkdir -p "$HOME/Android/sdk"
          wget https://dl.google.com/android/repository/commandlinetools-linux-13114758_latest.zip
          unzip commandlinetools-linux-13114758_latest.zip -d "$HOME/Android/sdk/cmdline-tools/latest"
          
      - name: Set up Android SDK environment variables
        run: |
          # echo "ANDROID_HOME=$HOME/Android/sdk" >> $GITHUB_ENV
          # echo "PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV
          echo "ANDROID_HOME=$HOME/Android/sdk" >> $GITHUB_ENV
          echo "PATH=$PATH:$HOME/Android/sdk/cmdline-tools/latest/bin:$HOME/Android/sdk/platform-tools" >> $GITHUB_ENV

      - name: Install specific Android SDK components
        run: |
          yes | sdkmanager --licenses > /dev/null
          sdkmanager "platform-tools" "build-tools;34.0.0" "platforms;android-34"
    
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Decode signing key
        env:
          SIGNING_KEY_BASE64: ${{ secrets.SIGNING_KEY_BASE64 }}
        run: |
          mkdir -p app/
          echo $SIGNING_KEY_BASE64 | base64 --decode > app/release.jks

      - name: Build with Gradle
        run: ./gradlew assembleRelease
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      # - name: Create Release using gh CLI
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     TAG_NAME="build-${{ steps.date_and_hash.outputs.date }}-${{ steps.date_and_hash.outputs.hash }}"
      #     RELEASE_NAME="Continuous Integration Build"
          
      #     gh release create "$TAG_NAME" \
      #       --repo "$GITHUB_REPOSITORY" \
      #       --title "$RELEASE_NAME" \
      #       --notes "Automated release from commit ${{ github.sha }}" \
      #       --target "$GITHUB_SHA" \
      #       "app/build/outputs/apk/release/*.apk"

      - name: Move APK to Local VPS Directory
        run: |
          APK_PATH=$(find app/build/outputs/apk/release/ -name "*.apk")
          DESTINATION_PATH="/home/presensigo"
          mkdir -p "$DESTINATION_PATH"
          mv "$APK_PATH" "$DESTINATION_PATH"
