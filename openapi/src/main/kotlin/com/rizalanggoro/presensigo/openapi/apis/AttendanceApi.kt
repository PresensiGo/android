/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.rizalanggoro.presensigo.openapi.apis

import com.rizalanggoro.presensigo.openapi.models.CreateGeneralAttendanceRecordStudentReq
import com.rizalanggoro.presensigo.openapi.models.CreateSubjectAttendanceRecordStudentReq
import com.rizalanggoro.presensigo.openapi.models.RequestsCreateGeneralAttendance
import com.rizalanggoro.presensigo.openapi.models.RequestsCreateSubjectAttendance
import com.rizalanggoro.presensigo.openapi.models.RequestsUpdateGeneralAttendance
import com.rizalanggoro.presensigo.openapi.models.ResponsesCreateGeneralAttendance
import com.rizalanggoro.presensigo.openapi.models.ResponsesCreateGeneralAttendanceRecordStudent
import com.rizalanggoro.presensigo.openapi.models.ResponsesCreateSubjectAttendance
import com.rizalanggoro.presensigo.openapi.models.ResponsesCreateSubjectAttendanceRecordStudent
import com.rizalanggoro.presensigo.openapi.models.ResponsesDeleteGeneralAttendance
import com.rizalanggoro.presensigo.openapi.models.ResponsesGetAllGeneralAttendances
import com.rizalanggoro.presensigo.openapi.models.ResponsesGetAllSubjectAttendances
import com.rizalanggoro.presensigo.openapi.models.ResponsesGetGeneralAttendance
import com.rizalanggoro.presensigo.openapi.models.ResponsesGetSubjectAttendance
import com.rizalanggoro.presensigo.openapi.models.ResponsesUpdateGeneralAttendance

import com.rizalanggoro.presensigo.openapi.infrastructure.*
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import io.ktor.http.ParametersBuilder
import com.google.gson.Gson
import com.google.gson.GsonBuilder
import java.text.DateFormat

    open class AttendanceApi(
    baseUrl: String = ApiClient.BASE_URL,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
    jsonBlock: GsonBuilder.() -> Unit = ApiClient.JSON_DEFAULT,
    ) : ApiClient(
        baseUrl,
        httpClientEngine,
        httpClientConfig,
        jsonBlock,
    ) {

        /**
        * GET /api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}/subject-attendances
        * 
        * 
         * @param batchId batch id 
         * @param majorId major id 
         * @param classroomId classroom id 
         * @return ResponsesGetAllSubjectAttendances
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun apiV1BatchesBatchIdMajorsMajorIdClassroomsClassroomIdSubjectAttendancesGet(batchId: kotlin.Int, majorId: kotlin.Int, classroomId: kotlin.Int): HttpResponse<ResponsesGetAllSubjectAttendances> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}/subject-attendances".replace("{" + "batch_id" + "}", "$batchId").replace("{" + "major_id" + "}", "$majorId").replace("{" + "classroom_id" + "}", "$classroomId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * POST /api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}/subject-attendances
        * 
        * 
         * @param batchId batch id 
         * @param majorId major id 
         * @param classroomId classroom id 
         * @param body body 
         * @return ResponsesCreateSubjectAttendance
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun apiV1BatchesBatchIdMajorsMajorIdClassroomsClassroomIdSubjectAttendancesPost(batchId: kotlin.Int, majorId: kotlin.Int, classroomId: kotlin.Int, body: RequestsCreateSubjectAttendance): HttpResponse<ResponsesCreateSubjectAttendance> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = body

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}/subject-attendances".replace("{" + "batch_id" + "}", "$batchId").replace("{" + "major_id" + "}", "$majorId").replace("{" + "classroom_id" + "}", "$classroomId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}/subject-attendances/{subject_attendance_id}
        * 
        * 
         * @param batchId batch id 
         * @param majorId major id 
         * @param classroomId classroom id 
         * @param subjectAttendanceId subject attendance id 
         * @return ResponsesGetSubjectAttendance
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun apiV1BatchesBatchIdMajorsMajorIdClassroomsClassroomIdSubjectAttendancesSubjectAttendanceIdGet(batchId: kotlin.Int, majorId: kotlin.Int, classroomId: kotlin.Int, subjectAttendanceId: kotlin.Int): HttpResponse<ResponsesGetSubjectAttendance> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}/subject-attendances/{subject_attendance_id}".replace("{" + "batch_id" + "}", "$batchId").replace("{" + "major_id" + "}", "$majorId").replace("{" + "classroom_id" + "}", "$classroomId").replace("{" + "subject_attendance_id" + "}", "$subjectAttendanceId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * POST /api/v1/general_attendances
        * 
        * 
         * @param body body 
         * @return ResponsesCreateGeneralAttendance
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun createGeneralAttendance(body: RequestsCreateGeneralAttendance): HttpResponse<ResponsesCreateGeneralAttendance> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = body

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/api/v1/general_attendances",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * POST /api/v1/general-attendances/records/student
        * 
        * 
         * @param body body 
         * @return ResponsesCreateGeneralAttendanceRecordStudent
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun createGeneralAttendanceRecordStudent(body: CreateGeneralAttendanceRecordStudentReq): HttpResponse<ResponsesCreateGeneralAttendanceRecordStudent> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = body

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/api/v1/general-attendances/records/student",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * POST /api/v1/subject-attendances/records/student
        * 
        * 
         * @param body body 
         * @return ResponsesCreateSubjectAttendanceRecordStudent
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun createSubjectAttendanceRecordStudent(body: CreateSubjectAttendanceRecordStudentReq): HttpResponse<ResponsesCreateSubjectAttendanceRecordStudent> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = body

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/api/v1/subject-attendances/records/student",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * DELETE /api/v1/general_attendances/{general_attendance_id}
        * 
        * 
         * @param generalAttendanceId general attendance id 
         * @return ResponsesDeleteGeneralAttendance
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun deleteGeneralAttendance(generalAttendanceId: kotlin.Int): HttpResponse<ResponsesDeleteGeneralAttendance> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.DELETE,
            "/api/v1/general_attendances/{general_attendance_id}".replace("{" + "general_attendance_id" + "}", "$generalAttendanceId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v1/general_attendances
        * 
        * 
         * @return ResponsesGetAllGeneralAttendances
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getAllGeneralAttendances(): HttpResponse<ResponsesGetAllGeneralAttendances> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/general_attendances",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v1/general_attendances/{general_attendance_id}
        * 
        * 
         * @param generalAttendanceId general attendance id 
         * @return ResponsesGetGeneralAttendance
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getGeneralAttendance(generalAttendanceId: kotlin.Int): HttpResponse<ResponsesGetGeneralAttendance> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/general_attendances/{general_attendance_id}".replace("{" + "general_attendance_id" + "}", "$generalAttendanceId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * PUT /api/v1/general_attendances/{general_attendance_id}
        * 
        * 
         * @param generalAttendanceId general attendance id 
         * @param body body 
         * @return ResponsesUpdateGeneralAttendance
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun updateGeneralAttendance(generalAttendanceId: kotlin.Int, body: RequestsUpdateGeneralAttendance): HttpResponse<ResponsesUpdateGeneralAttendance> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = body

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.PUT,
            "/api/v1/general_attendances/{general_attendance_id}".replace("{" + "general_attendance_id" + "}", "$generalAttendanceId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        }
