/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.rizalanggoro.presensigo.openapi.apis

import com.rizalanggoro.presensigo.openapi.models.GetAllStudentsByClassroomIdRes
import com.rizalanggoro.presensigo.openapi.models.GetProfileStudentRes
import com.rizalanggoro.presensigo.openapi.models.LoginStudentReq
import com.rizalanggoro.presensigo.openapi.models.LoginStudentRes
import com.rizalanggoro.presensigo.openapi.models.RefreshTokenStudentReq
import com.rizalanggoro.presensigo.openapi.models.RefreshTokenStudentRes
import com.rizalanggoro.presensigo.openapi.models.ResponsesEjectStudentToken
import com.rizalanggoro.presensigo.openapi.models.ResponsesGetAllStudentAccountsByClassroomId

import com.rizalanggoro.presensigo.openapi.infrastructure.*
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import io.ktor.http.ParametersBuilder
import com.google.gson.Gson
import com.google.gson.GsonBuilder
import java.text.DateFormat

    open class StudentApi(
    baseUrl: String = ApiClient.BASE_URL,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
    jsonBlock: GsonBuilder.() -> Unit = ApiClient.JSON_DEFAULT,
    ) : ApiClient(
        baseUrl,
        httpClientEngine,
        httpClientConfig,
        jsonBlock,
    ) {

        /**
        * POST /api/v1/auth/students/accounts/{student_token_id}/eject
        * 
        * 
         * @param studentTokenId student token id 
         * @return ResponsesEjectStudentToken
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun apiV1AuthStudentsAccountsStudentTokenIdEjectPost(studentTokenId: kotlin.Int): HttpResponse<ResponsesEjectStudentToken> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/api/v1/auth/students/accounts/{student_token_id}/eject".replace("{" + "student_token_id" + "}", "$studentTokenId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}/student-accounts
        * 
        * 
         * @param batchId batch id 
         * @param majorId major id 
         * @param classroomId classroom id 
         * @return ResponsesGetAllStudentAccountsByClassroomId
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun apiV1BatchesBatchIdMajorsMajorIdClassroomsClassroomIdStudentAccountsGet(batchId: kotlin.Int, majorId: kotlin.Int, classroomId: kotlin.Int): HttpResponse<ResponsesGetAllStudentAccountsByClassroomId> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}/student-accounts".replace("{" + "batch_id" + "}", "$batchId").replace("{" + "major_id" + "}", "$majorId").replace("{" + "classroom_id" + "}", "$classroomId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}/students
        * 
        * 
         * @param batchId batch id 
         * @param majorId major id 
         * @param classroomId classroom id 
         * @return GetAllStudentsByClassroomIdRes
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getAllStudentsByClassroomId(batchId: kotlin.Int, majorId: kotlin.Int, classroomId: kotlin.Int): HttpResponse<GetAllStudentsByClassroomIdRes> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}/students".replace("{" + "batch_id" + "}", "$batchId").replace("{" + "major_id" + "}", "$majorId").replace("{" + "classroom_id" + "}", "$classroomId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v1/students/profile
        * 
        * 
         * @return GetProfileStudentRes
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getProfileStudent(): HttpResponse<GetProfileStudentRes> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/students/profile",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * POST /api/v1/auth/students/login
        * 
        * 
         * @param body body 
         * @return LoginStudentRes
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun loginStudent(body: LoginStudentReq): HttpResponse<LoginStudentRes> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = body

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/api/v1/auth/students/login",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * POST /api/v1/auth/students/refresh-token
        * 
        * 
         * @param body body 
         * @return RefreshTokenStudentRes
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun refreshTokenStudent(body: RefreshTokenStudentReq): HttpResponse<RefreshTokenStudentRes> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = body

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/api/v1/auth/students/refresh-token",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        }
